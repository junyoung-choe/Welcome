<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.welcome.enjoytrip.board.model.mapper.BoardMapper">

    <!--        <resultMap type="boardDto" id="viewArticle" extends="article">-->
    <!--            <collection property="fileInfos" column="article_no" javaType="list" ofType="fileInfoDto" select="fileInfoList"/>-->
    <!--        </resultMap>-->

<!--    <resultMap type="fileInfoDto" id="file">-->
<!--        <result column="save_folder" property="saveFolder"/>-->
<!--        <result column="original_file" property="originalFile"/>-->
<!--        <result column="save_file" property="saveFile"/>-->
<!--    </resultMap>-->

<!--    <insert id="registerFile" parameterType="boardDto">-->
<!--        insert into file_info (board_id, save_folder, original_file, save_file)-->
<!--        values-->
<!--        <foreach collection="fileInfos" item="fileinfo" separator=" , ">-->
<!--            (#{articleNo}, #{fileinfo.saveFolder}, #{fileinfo.originalFile}, #{fileinfo.saveFile})-->
<!--        </foreach>-->
<!--    </insert>-->

    <!--    <select id="fileInfoList" resultMap="file">-->
    <!--        select save_folder, original_file, save_file-->
    <!--        from file_info-->
    <!--        where board_id = #{board_id}-->
    <!--    </select>-->

    <!--    <delete id="deleteFile" parameterType="int">-->
    <!--        delete from file_info-->
    <!--        where article_no = #{articleNo}-->
    <!--    </delete>-->

    <!-- 한방쿼리 시도 -->
<!--    <resultMap type="boardDto" id="article">-->
<!--        <result column="board_id" property="board_id"/>-->
<!--        <result column="user_id" property="user_id"/>-->
<!--        <result column="board_title" property="board_title"/>-->
<!--        <result column="board_content" property="board_content"/>-->
<!--        <result column="board_views" property="board_views"/>-->
<!--        <result column="board_regDate" property="board_regDate"/>-->
<!--    </resultMap>-->

<!--    <resultMap type="commentDto" id="comment">-->
<!--        <result column="comment_id" property="comment_id"/>-->
<!--        <result column="user_id" property="user_id"/>-->
<!--        <result column="board_id" property="board_id"/>-->
<!--        <result column="comment_content" property="comment_content"/>-->
<!--        <result column="comment_regDate" property="comment_regDate"/>-->
<!--    </resultMap>-->

<!--    <resultMap type="boardDto" id="viewArticle" extends="article">-->
<!--        <collection property="fileInfos" column="article_no" javaType="list" ofType="commentDto" select="fileInfoList"/>-->
<!--    </resultMap>-->

<!--                           -->



    <insert id="writeArticle" parameterType="boardDto">
        insert into board (user_id, board_title, board_content, board_views, board_regDate)
        values (#{user_id}, #{board_title}, #{board_content}, 0, now())
        <selectKey resultType="int" keyProperty="board_id" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>


    <sql id="search">
        <if test="word != null and word != ''">
            <if test="key == 'title'">
                and board_title like concat('%', #{word}, '%')
            </if>
            <if test="key != 'subject'">
                and ${key} = #{word}
            </if>
        </if>
    </sql>

    <select id="listArticle" parameterType="map" resultType="boardDto">
        select b.board_id, b.user_id, b.board_title, b.board_content, b.board_views, b.board_regDate, m.user_name
        from board b, user m
        where b.user_id = m.user_id
        <include refid="search"></include>
        order by b.board_id desc
        limit #{start}, #{listsize}
    </select>

    <select id="getTotalArticleCount" parameterType="map" resultType="int">
        select count(board_id)
        from board
        <where>
            <include refid="search"></include>
        </where>
    </select>

    <select id="getBoard" parameterType="int" resultType="boardDto">
        select b.board_id, b.user_id, b.board_title, b.board_content, b.board_views, b.board_regDate, m.user_name
        from board b, user m
        where b.user_id = m.user_id
        and b.board_id = #{board_id}
    </select>



    <update id="updateViews" parameterType="int">
        update board
        set board_views = board_views + 1
        where board_id = #{board_id}
    </update>

    <update id="modifyBoard" parameterType="boardDto">
        update board
        set board_title = #{board_title}, board_content = #{board_content}
        where board_id = #{board_id}
    </update>


    <delete id="deleteBoard" parameterType="int">
        delete from board
        where board_id = #{board_id}
    </delete>

    <insert id="writeComment" parameterType="commentDto">
        insert into comment (user_id, board_id, comment_content, comment_regDate)
        values (#{user_id}, #{board_id}, #{comment_content}, now())
    </insert>

    <select id="getComment" parameterType="int" resultType="commentDto">
        select comment_id ,user_id, board_id, comment_content, comment_regDate
        from comment
        where board_id = #{board_id}
    </select>



</mapper>